---
title: "Experiment1"
format: html
editor: visual
---

# Import packages

```{r}
library(conflicted)  
conflict_prefer("filter", "dplyr")
conflict_prefer("lag", "dplyr")

library(tidyverse)
library(tidyboot)
library(lme4)
library(here)
library(jsonlite)
library(ggthemes)
```

## Read in data

```{r}
# Load the necessary libraries
library(dplyr)

# Read the CSV files
chat_1 <- read_csv(here('data/extracted_msgs_exp1_2/msgs_cleaned_exp1.csv'))
chat_2 <- read_csv(here('data/extracted_msgs_exp1_2/messages_exp2.csv'))
chat_3 <- read_csv(here('data/extracted_msgs_prereg/cleaned_messages.csv'))

# Standardize column names to lowercase
chat_1 <- chat_1 %>% rename_with(tolower)
chat_2 <- chat_2 %>% rename_with(tolower)
chat_3 <- chat_3 %>% rename_with(tolower)

# Find the union of all column names
all_columns <- union(union(names(chat_1), names(chat_2)), names(chat_3))

# Function to add missing columns with NA values
add_missing_columns <- function(df, all_cols) {
  missing_cols <- setdiff(all_cols, names(df))
  df[missing_cols] <- NA
  return(df)
}

# Add missing columns to each dataframe
chat_1 <- add_missing_columns(chat_1, all_columns)
chat_2 <- add_missing_columns(chat_2, all_columns)
chat_3 <- add_missing_columns(chat_3, all_columns)

# Ensure columns are in the same order
chat_1 <- chat_1 %>% select(all_of(all_columns))
chat_2 <- chat_2 %>% select(all_of(all_columns))
chat_3 <- chat_3 %>% select(all_of(all_columns))

# Merge the dataframes
merged_chat <- bind_rows(chat_1, chat_2, chat_3) %>%
  mutate(treatmentname = ifelse(treatmentname %in% c('experiment1-0.7', 'experiment1-0.3'),
                                'experiment1-unidirectional', treatmentname)) %>%
  separate(treatmentname, into = c('condition', 'treatment'), sep = '-') %>%

# Display the merged dataframe
print(merged_chat)


```

**'n' (number)** -\> instances like 'i can see 3 rabbits and 1 squirrel' or '2s4r'\
**'t' (total)**-\> information including every other player "neighbours report 22 r to 10 s"\
**'p' (percent/ratio)** -\> "I think 1/3 squirrels 2/3 rabbits" or "60/40"\
**'d' (non-numeric description)** -\> "more rabbits than squirrels" or otherwise non-specific text (not like, "five")\
**'c' (character)** -\> '4 rabbits!' '4 rabbitsss' '4 wabbit' (this is subjective but it'll be fun if it works :p)\
**'m' (more chitchat)** -\> talking about game strategy, asking if someone is there, joking etc.

```{r}
coding_counts <- merged_chat %>%
  filter (round >1 & round <9) %>%
  separate_rows(coding, sep = "") %>%
  filter(coding %in% c("n", "p", "t")) %>%
  group_by(round, coding, treatment) %>%
  summarise(count = n(), .groups = 'drop')

# Plot the occurrences over time
ggplot(coding_counts, aes(x = round, y = count,  color = coding, linetype = treatment)) +
  geom_line() +
  geom_point() +
  labs(title = "",
       x = "Round",
       y = "Count",
       color = "Coding") +
  facet_grid(coding ~ ., scales = 'free_y') +
  theme_few() +
  theme(aspect.ratio = 1)
```
