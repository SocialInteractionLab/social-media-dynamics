---
title: "experiment 2"
format: html
editor: visual
---

## Import packages

```{r}
library(conflicted)  
conflict_prefer("filter", "dplyr")
conflict_prefer("lag", "dplyr")

library(tidyverse)
library(tidyboot)
library(lme4)
library(here)
library(jsonlite)
library(ggthemes)

theme_set(theme_few())
```

## Read in data

```{r}

d.all <- read_csv(here('analysis/2_experiment_2/exp2_clean_data_jan11.csv'))

d.all <- d.all %>%
  separate(treatmentName.x, into = c("direction", "treatment"), sep = "_")
```

## Filter games with 2+ inactive players

```{r}
persistentnoClick <- data.frame(gameID = character(), playerID = character(), stringsAsFactors = FALSE)

for (i in 1:7) {
  idx_pair <- c(i + 1, i + 2)
    filtered_players <- d.all %>%
    group_by(gameID, playerID) %>%
    filter(all(is.na(guess[idx_pair]))) %>%
    select(gameID, playerID) %>%
    distinct()
    persistentnoClick <- bind_rows(persistentnoClick, filtered_players)
}
persistentnoClick <- distinct(persistentnoClick)

gameIDs_to_remove <- persistentnoClick %>%
  count(gameID) %>%
  filter(n >= 2) %>%
  pull(gameID)

d.all <- d.all %>%
  filter(!(gameID %in% gameIDs_to_remove)) 

d.allnovel <-d.all %>%
  filter(is.na(designatedGame))%>%
  distinct(gameID)

d.allgame <- d.all %>%
   distinct(gameID, .keep_all = TRUE)
```

```{r}
heatmap_test <- d.allgame %>%
  filter(treatment %in% c('slider', 'interactive')) %>%
  filter(direction %in% c('SR', 'RS')) %>%
  group_by(treatment, direction, nCrittersGame_bin, representation_bin) %>%
  summarise(count = n(), .groups = "drop") %>%
  mutate(prop = count / sum(count, na.rm = TRUE))

ggplot(heatmap_test, aes(x = representation_bin, y = nCrittersGame_bin)) +
  geom_tile(aes(fill = count), color = "white") +
  scale_fill_gradient(name = "Count of Games", low = "lightblue", high = "darkblue") +
  labs(x = "Representation", y = "nCrittersGame") +
  theme_few() +
  theme(
    aspect.ratio = 1,
    axis.text.x = element_text(angle = 45, hjust = 1)
  ) #+
 # facet_wrap(~treatment #+ direction
   #          )
heatmap_test <- d.allgame %>%
  filter(treatment %in% c('slider', 'interactive')) %>%
  filter(direction %in% c('SR', 'RS')) %>%
  group_by(treatment, direction, entropy_bin, representation_bin) %>%
  summarise(count = n()) %>%
  mutate(prop = count / sum(count))

ggplot(heatmap_test, aes(x = entropy_bin, y = representation_bin)) +
  geom_tile(aes(fill = count), color = "white") +
  scale_fill_gradient(name = "Count of Games", low = "lightblue", high = "darkblue") +
  labs(x = "entropy", y = "representation") +
  theme_few() +
  theme(
    aspect.ratio = 1, axis.text.x = element_text(angle = 45, hjust = 1)
  ) #+
 # facet_wrap(~treatment #+ direction
    #         )

nCritters_entropy_heatmap_new <- d.allgame %>%
  filter(treatment %in% c('slider', 'interactive')) %>%
  filter(direction %in% c('SR', 'RS')) %>%
  group_by(treatment, direction, nCrittersGame_bin, entropy_bin) %>%
  summarise(count = n()) %>%
  mutate(prop = count / sum(count))

ggplot(nCritters_entropy_heatmap_new, aes(x = entropy_bin, y = nCrittersGame_bin)) +
  geom_tile(aes(fill = count), color = "white") +
  scale_fill_gradient(name = "Count of Games", low = "lightblue", high = "darkblue") +
  labs(x = "Entropy", y = "nCrittersGame") +
  theme_few() +
  theme(
    aspect.ratio = 1, axis.text.x = element_text(angle = 45, hjust = 1)
  ) #+
  #facet_wrap(~treatment #+ direction
   #          )

```

```{r}

truePs <- d.all %>% 
  filter(idx == 1) %>%
  group_by(treatment, gameID, nSquirrelsGame, nRabbitsGame) %>%
  tally() %>%
  group_by(treatment) %>%
  summarize(p = mean(nRabbitsGame / (nSquirrelsGame + nRabbitsGame)))

d.all %>%
  group_by(treatment, idx, gameID, direction) %>%
  summarize(guess = mean(guess), .groups = 'drop') %>% # Ensure .groups is specified
  group_by(treatment, idx, direction) %>% # Add 'direction' for consistent grouping
  tidyboot::tidyboot_mean(guess) %>%
  ggplot(aes(x = idx, y = empirical_stat, color = direction)) +
    geom_point() +
    geom_smooth(method = 'lm', formula = y ~ poly(x, 2), se = FALSE) +
    geom_hline(yintercept = c(75), linetype = 'dotted') +
    geom_ribbon(aes(ymin = ci_lower, ymax = ci_upper, fill = direction), color = NA, alpha = 0.1) +
    theme_few() +
    labs(y = 'average guess', x = 'round #', color = '') +
    scale_color_colorblind() +
    scale_fill_colorblind(guide = 'none') +
    scale_x_continuous(breaks = c(1, 3, 5, 7, 9, 11)) +
    theme(aspect.ratio = 1, legend.position = 'top')

```

```{r}
d.all %>%
  filter(!(playerID %in% confused)) %>%
  filter(!(playerID %in% persistentnoClick)) %>%
  group_by(treatment, idx, gameID) %>%
  summarize(error = mean(abs(guess - treatAvg))) %>%
  group_by(treatment, idx) %>%
  tidyboot_mean(error) %>%
  
  ggplot(aes(x = idx, y = empirical_stat, color = treatment)) +
    geom_point() +
    geom_ribbon(aes(ymin = ci_lower, ymax = ci_upper, fill = treatmentName), 
                color = NA, 
                alpha = 0.1) +
    geom_hline(yintercept = 0, linetype = 'dotted') +
    geom_smooth(method = 'lm', formula = y ~ poly(x, 2), se =F) +
    theme_few() +
    labs(y = 'average error', x = 'round #', color = '') +
    scale_color_colorblind() +
    scale_fill_colorblind(guide="none") +
    ylim(0, 30) +
    scale_x_continuous(breaks = c(1,3,5,7,9,11)) +
    theme(aspect.ratio = 1, legend.position = 'top')
```
