---
title: "experiment 4"
format: html
editor: visual
---

## Import packages

```{r}
library(conflicted)  
conflict_prefer("filter", "dplyr")
conflict_prefer("lag", "dplyr")

library(tidyverse)
library(tidyboot)
library(lme4)
library(here)
library(jsonlite)
library(ggthemes)

theme_set(theme_few())
```

## Read in data

```{r}

d.all <- read_csv(here('analysis/2_experiment_2/exp2_clean_data_jan17.csv'))

d.all <- d.all %>%
  separate(treatmentName.x, into = c("direction", "treatment"), sep = "_")
```

## Filter games with 2+ inactive players

```{r}
persistentnoClick <- data.frame(gameID = character(), playerID = character(), stringsAsFactors = FALSE)

for (i in 1:7) {
  idx_pair <- c(i + 1, i + 2)
    filtered_players <- d.all %>%
    group_by(gameID, playerID) %>%
    filter(all(is.na(guess[idx_pair]))) %>%
    select(gameID, playerID) %>%
    distinct()
    persistentnoClick <- bind_rows(persistentnoClick, filtered_players)
}
persistentnoClick <- distinct(persistentnoClick)

gameIDs_to_remove <- persistentnoClick %>%
  count(gameID) %>%
  filter(n >= 2) %>%
  pull(gameID)

d.all <- d.all %>%
  filter(!(gameID %in% gameIDs_to_remove)) 

d.allnovel <-d.all %>%
  filter(is.na(designatedGame))%>%
  distinct(gameID)

d.allgame <- d.all %>%
   distinct(gameID, .keep_all = TRUE)
```

```{r}
heatmap_test <- d.allgame %>%
  filter(treatment %in% c('slider', 'interactive')) %>%
  filter(direction %in% c('SR', 'RS')) %>%
  group_by(treatment, direction, nCrittersGame_bin, representation_bin) %>%
  summarise(count = n(), .groups = "drop") %>%
  mutate(prop = count / sum(count, na.rm = TRUE))

ggplot(heatmap_test, aes(x = representation_bin, y = nCrittersGame_bin)) +
  geom_tile(aes(fill = count), color = "white") +
  scale_fill_gradient(name = "Count of Games", low = "lightblue", high = "darkblue") +
  labs(x = "Representation", y = "nCrittersGame") +
  theme_few() +
  theme(
    aspect.ratio = 1,
    axis.text.x = element_text(angle = 45, hjust = 1)
  ) +
  facet_wrap(~treatment #+ direction
             )

#run this with direction excluded
low_count_combinations <- heatmap_test %>%
  select(-direction) %>%
  filter(count <= 1)

#run this with direction included
#low_direction_combinations <- heatmap_test %>%
 # filter(count < 2)


print(low_count_combinations)

```

```{r}
heatmap_test <- d.allgame %>%
  filter(treatment %in% c('slider', 'interactive')) %>%
  filter(direction %in% c('SR', 'RS')) %>%
  group_by(treatment, direction, entropy_bin, representation_bin) %>%
  summarise(count = n()) %>%
  mutate(prop = count / sum(count))

ggplot(heatmap_test, aes(x = entropy_bin, y = representation_bin)) +
  geom_tile(aes(fill = count), color = "white") +
  scale_fill_gradient(name = "Count of Games", low = "lightblue", high = "darkblue") +
  labs(x = "entropy", y = "representation") +
  theme_few() +
  theme(
    aspect.ratio = 1, axis.text.x = element_text(angle = 45, hjust = 1)
  ) +
  facet_wrap(~treatment #+ direction
             )

#run this with direction excluded
low_count_combinations1 <- heatmap_test %>%
  select(-direction) %>%
  filter(count <= 1)


#run this with direction included
#low_direction_combinations1 <- heatmap_test %>%
#  filter(count < 2)

print(low_count_combinations)
```

```{r}
nCritters_entropy_heatmap_new <- d.allgame %>%
  filter(treatment %in% c('slider', 'interactive')) %>%
  filter(direction %in% c('SR', 'RS')) %>%
  group_by(treatment, direction, nCrittersGame_bin, entropy_bin) %>%
  summarise(count = n()) %>%
  mutate(prop = count / sum(count))

ggplot(nCritters_entropy_heatmap_new, aes(x = entropy_bin, y = nCrittersGame_bin)) +
  geom_tile(aes(fill = count), color = "white") +
  scale_fill_gradient(name = "Count of Games", low = "lightblue", high = "darkblue") +
  labs(x = "Entropy", y = "nCrittersGame") +
  theme_few() +
  theme(
    aspect.ratio = 1, axis.text.x = element_text(angle = 45, hjust = 1)
  ) +
  facet_wrap(~treatment #+ direction
             )
#run this with direction excluded
low_count_combinations2 <- heatmap_test %>%
  select(-direction) %>%
  filter(count <= 1)


#run this with direction included
#low_direction_combinations2 <- heatmap_test %>%
#  filter(count < 2)


print(low_count_combinations)
```

```{r}
# under 2 in direction x treatment
#low_direction<- bind_rows(low_direction_combinations,low_direction_combinations1, low_direction_combinations2)

#3 or less just between treatments

low_count <- bind_rows(low_count_combinations,low_count_combinations1, low_count_combinations2)
```

```{r}
#write.csv(low_direction, "low_direction.csv", row.names = FALSE)
write.csv(low_count, "low_count.csv", row.names = FALSE)
```
