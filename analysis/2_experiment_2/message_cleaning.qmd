---
title: "experiment 2"
format: html
editor: visual
---

## Import packages

```{r}
library(conflicted)  
conflict_prefer("filter", "dplyr")
conflict_prefer("lag", "dplyr")

library(tidyverse)
library(tidyboot)
library(lme4)
library(here)
library(jsonlite)
library(ggthemes)
library(dplyr)
library(purrr)
library(tidyr)

theme_set(theme_few())

ParseJSONColumn <- function(x) {
  str_c("[ ", str_c(x, collapse = ",", sep=" "), " ]")  %>% 
    fromJSON(flatten = T) 
}
```

## Read in data

```{r, echo=FALSE, results='hide', message=FALSE, warning=FALSE}
d.1 <- bind_rows(
  read_csv(here('data/2_experiment_2_rare_distrib/11-22-2101/playerStage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-20-2234/playerStage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-20-2246/playerStage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-21-0329/playerStage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-22-1731/playerStage.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/11-26-1646/playerStage.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-1848/playerStage.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-2022/playerStage.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-2134/playerStage.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-2211/playerStage.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-03-2051/playerStage.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-03-2201/playerStage.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-03-2348/playerStage.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-04-0302/playerStage.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-04-0431/playerStage.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-10-0257/playerStage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-10-0433/playerStage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-11-2206/playerStage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-14-2139/playerStage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-17-2124/playerStage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-17-2245/playerStage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-19-0217/playerStage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-19-0243/playerStage.csv'))
)

d.2 <- bind_rows(
  read_csv(here('data/2_experiment_2_rare_distrib/11-22-2101/round.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-20-2234/round.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-20-2246/round.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-21-0329/round.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-22-1731/round.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-26-1646/round.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-1848/round.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-2022/round.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-2134/round.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-2211/round.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-03-2051/round.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-03-2201/round.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-03-2348/round.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-04-0302/round.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-04-0431/round.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-10-0257/round.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-10-0433/round.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-11-2206/round.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-14-2139/round.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-17-2124/round.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-17-2245/round.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-19-0217/round.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-19-0243/round.csv'))
)%>% 
  rename(roundID = id) 

d.3 <- bind_rows(
  read_csv(here('data/2_experiment_2_rare_distrib/11-22-2101/stage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-20-2234/stage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-20-2246/stage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-21-0329/stage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-22-1731/stage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-26-1646/stage.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-1848/stage.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-2022/stage.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-2134/stage.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-2211/stage.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-03-2051/stage.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-03-2201/stage.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-03-2348/stage.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-04-0302/stage.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-04-0431/stage.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-10-0257/stage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-10-0433/stage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-11-2206/stage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-14-2139/stage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-17-2124/stage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-17-2245/stage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-19-0217/stage.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-19-0243/stage.csv'))
)%>% 
  rename(stageID = id)%>%
  rename(stageName = name)

d.5 <- bind_rows(
  read_csv(here('data/2_experiment_2_rare_distrib/11-22-2101/playerGame.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-20-2234/playerGame.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-20-2246/playerGame.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-21-0329/playerGame.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-22-1731/playerGame.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-26-1646/playerGame.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-1848/playerGame.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-2022/playerGame.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-2134/playerGame.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-2211/playerGame.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-03-2051/playerGame.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-03-2201/playerGame.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-03-2348/playerGame.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-04-0302/playerGame.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-04-0431/playerGame.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-10-0257/playerGame.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-10-0433/playerGame.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-11-2206/playerGame.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-14-2139/playerGame.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-17-2124/playerGame.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-17-2245/playerGame.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-19-0217/playerGame.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-19-0243/playerGame.csv'))
)


d.6 <- bind_rows(
  read_csv(here('data/2_experiment_2_rare_distrib/11-22-2101/player.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-20-2234/player.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-20-2246/player.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-21-0329/player.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-22-1731/player.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-26-1646/player.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-1848/player.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-2022/player.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-2134/player.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-2211/player.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-03-2051/player.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-03-2201/player.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-03-2348/player.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-04-0302/player.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-04-0431/player.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-10-0257/player.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-10-0433/player.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-11-2206/player.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-14-2139/player.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-17-2124/player.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-17-2245/player.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-19-0217/player.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-19-0243/player.csv'))
)%>% 
  rename(playerID = id) %>% 
  select(-contains("LastChangedAt")) %>%
  filter(ended == "game ended")

d.8 <- bind_rows(
  read_csv(here('data/2_experiment_2_rare_distrib/11-22-2101/game.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-20-2234/game.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-20-2246/game.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-21-0329/game.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-22-1731/game.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-26-1646/game.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-1848/game.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-2022/game.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-2134/game.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-2211/game.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-03-2051/game.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-03-2201/game.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-03-2348/game.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-04-0302/game.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-04-0431/game.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-10-0257/game.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-10-0433/game.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-11-2206/game.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-14-2139/game.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-17-2124/game.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-17-2245/game.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-19-0217/game.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-19-0243/game.csv'))
)%>% 
  rename(gameID = id)

d.9 <- bind_rows(
  read_csv(here('data/2_experiment_2_rare_distrib/11-22-2101/batch.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-20-2234/batch.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-20-2246/batch.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-21-0329/batch.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-22-1731/batch.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/11-26-1646/batch.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-1848/batch.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-2022/batch.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-2134/batch.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-02-2211/batch.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-03-2051/batch.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-03-2201/batch.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-03-2348/batch.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-04-0302/batch.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-04-0431/batch.csv')),
 read_csv(here('data/2_experiment_2_rare_distrib/01-10-0257/batch.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-10-0433/batch.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-11-2206/batch.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-14-2139/batch.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-17-2124/batch.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-17-2245/batch.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-19-0217/batch.csv')),
  read_csv(here('data/2_experiment_2_rare_distrib/01-19-0243/batch.csv'))
)%>% 
  rename(batchID = id)

decode1 <- read_json(here('analysis/2_simulations/generated_files_used/games_dontoverwrite.json'), simplifyVector = TRUE) %>%
  as_tibble() %>%
  rename(nCrittersGame = totalCritters) %>%
  rename(designatedGame = gameID)%>%
   filter(designatedGame != 10120) %>%
  mutate(representation = as.character(representation))

decode3 <- read_json(here('analysis/2_simulations/generated_files_used/games_2_dontoverwrite.json'), simplifyVector = TRUE) %>%
  as_tibble() %>%
  rename(nCrittersGame = totalCritters) %>%
  rename(designatedGame = gameID)%>%
  mutate(nCrittersGame = as.integer(nCrittersGame)) %>%
  mutate(representation = as.character(representation))

decode <- bind_rows(decode1, decode3)

```

```{r}
d.gamebatch <- merge(d.8, d.9, by = c("batchID"), all=T)%>%
  select(-contains("LastChangedAt"))

d.playergamebatch <-merge(d.6, d.gamebatch, by="gameID", all = T)

d.59 <-merge(d.playergamebatch,d.5, by = c("gameID", "playerID"), all = T)%>%
  select(-contains("LastChangedAt"))

rm(d.8, d.9, d.6, d.gamebatch, d.playergamebatch, d.5)

d.stageID <- merge(d.1, d.3, by = c("stageID", "gameID", "roundID"), all = T) %>%
  select(-contains("LastChangedAt"))


d.playerstageround <-merge(d.stageID,d.2, by = c("roundID", "gameID"), all = T)%>%
  select(-contains("LastChangedAt"))%>%
  select(gameID, stageName, roundID, confidence, guess, playerID, stageID,idx)

rm(d.1, d.2, d.stageID, d.3)

d.all <-merge(d.playerstageround,d.59, by = c("playerID", "gameID"), all = T)%>%
  select(gameID, playerID, stageName, treatmentName.x, ended.x, roundID, confidence, guess, stageID.x, idx, emojiArray, exitSurvey, participantID, recipient,treatment.x, chat,messages)%>%
  mutate(
    emojiArray = str_remove_all(emojiArray, "\\s"),
    emojiArray = str_extract_all(emojiArray, "🐇|🐿️"),
    nRabbits = sapply(emojiArray, function(x) sum(x == "🐇")),
    nSquirrels = sapply(emojiArray, function(x) sum(x == "🐿️")),
    nCritters = nSquirrels + nRabbits,
    mleEstimate = nRabbits / (nRabbits + nSquirrels)
  ) 

rm(d.59, d.playerstageround)

```

```{r}
d.all <- d.all %>%
  distinct() %>%
  group_by(gameID) %>%
  mutate(num_players = n_distinct(playerID)) %>%
  ungroup() %>%
  filter(num_players == 4) %>%
  filter(ended.x == 'game ended') %>%
  filter(stageName == 'observe') %>%
  separate(treatmentName.x, into = c("direction", "treatment"), sep = "_") 

d.allgameplayers <- d.all %>%
   distinct(playerID, gameID, .keep_all = TRUE) %>%
  group_by(gameID) %>%
  mutate(
    nRabbitsGame = sum(nRabbits, na.rm = TRUE),
    nSquirrelsGame = sum(nSquirrels, na.rm = TRUE),
    nCrittersGame = sum(nCritters, na.rm = TRUE),
    mleGame = round(nRabbitsGame / (nRabbitsGame + nSquirrelsGame),4),
    prob = round(nCritters / nCrittersGame, 4),
    entropy = round(-sum(ifelse(prob > 0, prob * log(prob), 0)), 4),
    representation = round(mean(abs(mleEstimate - mleGame)), 4)
  ) %>%
  ungroup()

d.gamelist <- d.allgameplayers%>%
  group_by(gameID) %>%
  slice(1) %>% 
  ungroup()


n_unique <- nrow(unique(decode[c("nCritters", "mleGame")]))
n_unique

dup_rows <- decode  %>%
  group_by(nCrittersGame, mleGame) %>%
  filter(n() > 1) %>%
  count(designatedGame) %>%
  filter (n==1)

duplicated_rows <-decode %>%
  filter(designatedGame %in% dup_rows$designatedGame)

# Print the rows
print(dup_rows)

#looks like 10297 and 3627 are randomly generated identical pairs and 16039 only differs by one (so representation is different)
d.decode <- decode%>%
  distinct(designatedGame, .keep_all = TRUE)

d.allgameplayers <- d.allgameplayers %>%
  mutate(across(c(nCrittersGame, representation, entropy), as.character))

d.decode <- d.decode %>%
  mutate(across(c(nCrittersGame, representation, entropy), as.character))

d.allgameplayers <- d.allgameplayers %>%
  mutate(representation_formatted = sprintf("%.3f", as.numeric(representation)))

d.decode <- d.decode %>%
  mutate(representation_formatted = sprintf("%.3f", as.numeric(representation)))

d.allgameplayers <- d.allgameplayers %>%
  left_join(
    d.decode %>%
      distinct(
        nCrittersGame, nRabbitsGame, nSquirrelsGame, mleGame, representation_formatted, designatedGame, entropy_bin, representation_bin, nCrittersGame_bin
      ),
    by = c("nCrittersGame", "nRabbitsGame", "nSquirrelsGame", "mleGame", "representation_formatted")
  )


d.all <- d.all %>%
  left_join(
    d.allgameplayers %>%
      select(nSquirrelsGame, nRabbitsGame, nCrittersGame, gameID, mleGame, prob, entropy, representation, designatedGame, entropy_bin, representation_bin,nCrittersGame_bin) %>%
      distinct(gameID, .keep_all = TRUE), 
    by = c("gameID")
  )

d.all <- d.all%>%
  mutate(error = if_else(direction == "RS", abs((100-guess) - (mleGame*100)), abs(guess - (mleGame*100))))
```

```{r}


d.allgameplayers <- d.all %>%
   distinct(playerID, gameID, .keep_all = TRUE) %>%
  group_by(gameID) %>%
  mutate(
    nRabbitsGame = sum(nRabbits, na.rm = TRUE),
    nSquirrelsGame = sum(nSquirrels, na.rm = TRUE),
    nCrittersGame = sum(nCritters, na.rm = TRUE),
    mleGame = round(nRabbitsGame / (nRabbitsGame + nSquirrelsGame),4),
    prob = round(nCritters / nCrittersGame, 4),
    entropy = round(-sum(ifelse(prob > 0, prob * log(prob), 0)), 4),
    representation = round(mean(abs(mleEstimate - mleGame)), 4)
  ) %>%
  ungroup()



d.gamelist <- d.allgameplayers%>%
  group_by(gameID) %>%
  slice(1) %>% 
  ungroup()
```

## Filter games with 2+ inactive players

```{r}
persistentnoClick <- data.frame(gameID = character(), playerID = character(), stringsAsFactors = FALSE)

for (i in 1:7) {
  idx_pair <- c(i + 1, i + 2)
    filtered_players <- d.all %>%
    group_by(gameID, playerID) %>%
    filter(all(is.na(guess[idx_pair]))) %>%
    select(gameID, playerID) %>%
    distinct()
    persistentnoClick <- bind_rows(persistentnoClick, filtered_players)
}
persistentnoClick <- distinct(persistentnoClick)

gameIDs_to_remove <- persistentnoClick %>%
  count(gameID) %>%
  filter(n >= 2) %>%
  pull(gameID)

d.all_rescue <- d.all %>%
  filter((gameID %in% gameIDs_to_remove)) 

d.all <- d.all %>%
  filter(!(gameID %in% gameIDs_to_remove)) 

d.allnovel <-d.all %>%
  filter(is.na(designatedGame))%>%
  distinct(gameID)

d.allgame <- d.all %>%
   distinct(gameID, .keep_all = TRUE)

d.all <- d.all %>%
  mutate(
    nCrittersGame_bin = str_remove_all(nCrittersGame_bin, "[\\[\\]()]"),
    entropy_bin = str_remove_all(entropy_bin, "[\\[\\]()]"),
    representation_bin = str_remove_all(representation_bin, "[\\[\\]()]")
  )
```

```{r}
# Retain the key columns (id, direction, treatment) before unnesting
d.chat.raw <- d.all %>%
  mutate(messages = ifelse(is.na(messages), '[]', messages)) %>%
  mutate(messages = map(messages, ParseJSONColumn)) %>%
  select(gameID, playerID, direction, treatment, messages#, guess, confidence, idx, nRabbits, nSquirrels, nCritters, mleEstimate, nSquirrelsGame, nRabbitsGame, mleGame, entropy, representation, designatedGame, entropy_bin, representation_bin, nCrittersGame_bin, error
         ) %>%  # Ensure we retain these columns
  unnest(messages, keep_empty = TRUE) %>%  # Keep empty rows
  distinct()

# Check if critical columns exist after unnesting
required_cols <- c("gameID", "direction", "treatment")
missing_cols <- setdiff(required_cols, colnames(d.chat.raw))

if (length(missing_cols) > 0) {
  stop(paste("Columns", paste(missing_cols, collapse = ", "), "are missing after unnesting."))
}

# Identify list columns
list_columns <- sapply(d.chat.raw, is.list)
list_column_names <- names(list_columns[list_columns])

# Print first example of each list column
for (col in list_column_names) {
  if (length(d.chat.raw[[col]]) > 0) {
    print(paste("First example from column", col, ":"))
    print(d.chat.raw[[col]][[1]])
  }
}

# Initialize storage
extracted_data_list <- list()
all_columns <- character(0)
empty_list_rows <- integer(0)

# Process each row
for (i in seq_len(nrow(d.chat.raw))) {
  treatment <- d.chat.raw$treatment[i]
  direction <- d.chat.raw$direction[i]
  gameID <- d.chat.raw$gameID[i]
  embedded_df <- d.chat.raw$messages[[i]]
 
  # Ensure embedded_df is not empty
  if (is.list(embedded_df) && length(embedded_df) == 0) {
    empty_list_rows <- c(empty_list_rows, i)
  } else if (is.data.frame(embedded_df) && nrow(embedded_df) > 0) {
    # Track column names
    all_columns <- unique(c(all_columns, colnames(embedded_df)))
    
    # Ensure missing columns are NA
    missing_columns <- setdiff(all_columns, colnames(embedded_df))
    embedded_df[missing_columns] <- NA
    
    # Assign values correctly to each row of embedded_df 
    embedded_df$treatment <- treatment
    embedded_df$direction <- direction
    embedded_df$gameID <- gameID
   

    # Add to the extracted data list
    extracted_data_list[[length(extracted_data_list) + 1]] <- embedded_df
  }
}

# Handle empty messages
valid_indices <- empty_list_rows[empty_list_rows %in% seq_len(nrow(d.chat.raw))]
if (length(valid_indices) > 0) {
  empty_list_df <- d.chat.raw[valid_indices, c("gameID", "treatment", "direction"#, #"guess", "confidence", "playerID", "idx", "nRabbits", "nSquirrels", "nCritters", "mleEstimate", "nSquirrelsGame", "nRabbitsGame", "mleGame", "entropy", "representation", "designatedGame", "entropy_bin", "representation_bin", "nCrittersGame_bin", "error"
                                               ), drop = FALSE]
  missing_columns <- setdiff(all_columns, colnames(empty_list_df))
  empty_list_df[missing_columns] <- NA
} else {
  empty_list_df <- data.frame()
}

# Combine data
combined_data<- bind_rows(extracted_data_list, empty_list_df)
combined_data <- combined_data %>% filter(treatment == 'interactive')%>%
  select(-sender.avatar, -time)

print(combined_data)

```

```{r}
# Retain the key columns (id, direction, treatment) before unnesting
d.chat.raw <- d.all_rescue %>%
  mutate(messages = ifelse(is.na(messages), '[]', messages)) %>%
  mutate(messages = map(messages, ParseJSONColumn)) %>%
  select(gameID, playerID, direction, treatment, messages#, guess, confidence, idx, nRabbits, nSquirrels, nCritters, mleEstimate, nSquirrelsGame, nRabbitsGame, mleGame, entropy, representation, designatedGame, entropy_bin, representation_bin, nCrittersGame_bin, error
         ) %>%  # Ensure we retain these columns
  unnest(messages, keep_empty = TRUE) %>%  # Keep empty rows
  distinct()

# Check if critical columns exist after unnesting
required_cols <- c("gameID", "direction", "treatment")
missing_cols <- setdiff(required_cols, colnames(d.chat.raw))

if (length(missing_cols) > 0) {
  stop(paste("Columns", paste(missing_cols, collapse = ", "), "are missing after unnesting."))
}

# Identify list columns
list_columns <- sapply(d.chat.raw, is.list)
list_column_names <- names(list_columns[list_columns])

# Print first example of each list column
for (col in list_column_names) {
  if (length(d.chat.raw[[col]]) > 0) {
    print(paste("First example from column", col, ":"))
    print(d.chat.raw[[col]][[1]])
  }
}

# Initialize storage
extracted_data_list <- list()
all_columns <- character(0)
empty_list_rows <- integer(0)

# Process each row
for (i in seq_len(nrow(d.chat.raw))) {
  treatment <- d.chat.raw$treatment[i]
  direction <- d.chat.raw$direction[i]
  gameID <- d.chat.raw$gameID[i]
  embedded_df <- d.chat.raw$messages[[i]]
 # guess <- d.chat.raw$guess[i]
 # confidence <- d.chat.raw$confidence[i]
#  playerID <- d.chat.raw$playerID[i]
 # idx <- d.chat.raw$idx[i]
#  nRabbits <- d.chat.raw$nRabbits[i]
#  nSquirrels <- d.chat.raw$nSquirrels[i]
 # nCritters <- d.chat.raw$nCritters[i]
#  mleEstimate <- d.chat.raw$mleEstimate[i]
 # nSquirrelsGame <- d.chat.raw$nSquirrelsGame[i]
#  nRabbitsGame <- d.chat.raw$nRabbitsGame[i]
#  mleGame <- d.chat.raw$mleGame[i]
 # entropy <- d.chat.raw$entropy[i]
#  representation <- d.chat.raw$representation[i]
 # designatedGame <- d.chat.raw$designatedGame[i]
#  entropy_bin <- d.chat.raw$entropy_bin[i]
 # representation_bin <- d.chat.raw$representation_bin[i]
  #nCrittersGame_bin <- d.chat.raw$nCrittersGame_bin[i]
  #error <- d.chat.raw$error[i]

  # Ensure embedded_df is not empty
  if (is.list(embedded_df) && length(embedded_df) == 0) {
    empty_list_rows <- c(empty_list_rows, i)
  } else if (is.data.frame(embedded_df) && nrow(embedded_df) > 0) {
    # Track column names
    all_columns <- unique(c(all_columns, colnames(embedded_df)))
    
    # Ensure missing columns are NA
    missing_columns <- setdiff(all_columns, colnames(embedded_df))
    embedded_df[missing_columns] <- NA
    
    # Assign values correctly to each row of embedded_df 
    embedded_df$treatment <- treatment
    embedded_df$direction <- direction
    embedded_df$gameID <- gameID
   
    # Add to the extracted data list
    extracted_data_list[[length(extracted_data_list) + 1]] <- embedded_df
  }
}

# Handle empty messages
valid_indices <- empty_list_rows[empty_list_rows %in% seq_len(nrow(d.chat.raw))]
if (length(valid_indices) > 0) {
  empty_list_df <- d.chat.raw[valid_indices, c("gameID", "treatment", "direction"#, #"guess", "confidence", "playerID", "idx", "nRabbits", "nSquirrels", "nCritters", "mleEstimate", "nSquirrelsGame", "nRabbitsGame", "mleGame", "entropy", "representation", "designatedGame", "entropy_bin", "representation_bin", "nCrittersGame_bin", "error"
                                               ), drop = FALSE]
  missing_columns <- setdiff(all_columns, colnames(empty_list_df))
  empty_list_df[missing_columns] <- NA
} else {
  empty_list_df <- data.frame()
}

# Combine data
combined_data.rescue <- bind_rows(extracted_data_list, empty_list_df)
combined_data.rescue <- combined_data.rescue %>% filter(treatment == 'interactive')%>%
  select(-sender.avatar, -time)

print(combined_data.rescue)

```

```{r}
combined_data <- combined_data %>% filter(treatment == 'interactive')
combined_data <- combined_data %>%
  left_join(
    d.all %>%
      select(guess, confidence, playerID, idx, nRabbits, nSquirrels, nCritters, mleEstimate,
             nSquirrelsGame, nRabbitsGame, mleGame, entropy, representation, designatedGame,
             entropy_bin, representation_bin, nCrittersGame_bin, error) %>%
      rename(sender.id = playerID, round = idx),
    by = c("sender.id", "round")
  )
write.csv(combined_data, "to_code.csv", row.names = FALSE)
```

```{r}
 combined_data.rescue <- combined_data.rescue %>% filter(treatment == 'interactive') 
 combined_data.rescue <- combined_data.rescue %>%
  left_join(
    d.all_rescue %>%
      select(guess, confidence, playerID, idx, nRabbits, nSquirrels, nCritters, mleEstimate,
             nSquirrelsGame, nRabbitsGame, mleGame, entropy, representation, designatedGame,
             entropy_bin, representation_bin, nCrittersGame_bin, error) %>%
      rename(sender.id = playerID, round = idx),
    by = c("sender.id", "round")
  )

```
