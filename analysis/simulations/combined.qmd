---
title: "experiment 2"
format: html
editor: visual
---

## Import packages

```{r}
library(conflicted)  
conflict_prefer("filter", "dplyr")
conflict_prefer("lag", "dplyr")

library(tidyverse)
library(here)
library(ggthemes)

theme_set(theme_few())
```

# Read in simulated data

```{r}
d.random <- here('analysis/simulations/game_results10k.csv') %>%
  read_csv(col_types = 'ccii') %>%
  mutate(
    mleEstimate = nRabbits / (nRabbits + nSquirrels),
    nCritters = nRabbits + nSquirrels
  ) %>%
  replace_na(list(mleEstimate = .5)) %>%
  group_by(gameID) %>%
  mutate(
    nRabbitsGame = sum(nRabbits),
    nSquirrelsGame = sum(nSquirrels),
    mleGame = nRabbitsGame / (nRabbitsGame + nSquirrelsGame),
    totalCritters = sum(nCritters),
    prob = nCritters / totalCritters,
    entropy = -sum(ifelse(prob > 0, prob * log(prob), 0)),
    representation = mean(abs(mleEstimate - mleGame))
  ) %>%
  ungroup()
```

# Read in V2 data

```{r}
d.guesses.v2.raw <- read_csv(here('data/PreregMergedGuesses.csv')) %>%
  filter(idx == 4) %>%
  filter(any(!is.na(treatmentName)))

unique_rows.v2 <- d.guesses.v2.raw %>%
  filter(treatmentName %in% c("rerun-unidirectional- 0.7", "rerun-unidirectional- 0.3")) %>%
  distinct(playerID, gameID, guess, roundID, .keep_all = TRUE)

d.guesses.v2 <- d.guesses.v2.raw %>%
  filter(!(treatmentName %in% c("rerun-unidirectional- 0.7", "rerun-unidirectional- 0.3"))) %>%
  bind_rows(unique_rows.v2) %>%
  mutate(data = "new") %>%
  mutate(treatmentName = case_when(
    treatmentName == "rerun-unidirectional- 0.7" ~ 'unidirectional-0.7',
    treatmentName == "rerun-unidirectional- 0.3" ~ 'unidirectional-0.3',
    treatmentName =="rerun-interactive-0.3" ~ 'interactive-0.3',
    treatmentName =="rerun-interactive- 0.7" ~ 'interactive-0.7',
    treatmentName =="rerun-slider- 0.3" ~ 'slider-0.3',
    treatmentName =="rerun-slider- 0.7" ~ 'slider-0.7'
  )) %>%
  separate(treatmentName, into = c('condition', 'treatment'), sep = '-') %>%
  group_by(gameID) %>%
  mutate(nCritters = nRabbits + nSquirrels,
         mleEstimateIndiv = (nRabbits / (nRabbits + nSquirrels)), 
         mleEstimateIndiv = ifelse(is.na(mleEstimateIndiv), .5, mleEstimateIndiv),
         nCrittersGame = nRabbitsGame+nSquirrelsGame,
         mleEstimateGame = (nRabbitsGame / (nRabbitsGame + nSquirrelsGame)))  %>%
  arrange(playerID, idx)
```

```{r}
d.guesses.v1 <- read_csv(here('data/merged_data_exp.csv')) %>%
  filter(idx == 4) %>%
  distinct(playerID, gameID, guess, roundID, .keep_all = TRUE) %>%
  filter(any(!is.na(treatmentName))) %>%
  mutate(data = "old")%>%
  filter(!is.na(guess)) %>%
  mutate(treatmentName = case_when(
    treatmentName == "experiment1-0.7" ~ 'unidirectional-0.7',
    treatmentName == "experiment1-0.3" ~ 'unidirectional-0.3',
    treatmentName =="experiment2-interactive-0.3" ~ 'interactive-0.3',
    treatmentName =="experiment2-interactive-0.7" ~ 'interactive-0.7',
    treatmentName =="experiment2-slider-0.3" ~ 'slider-0.3',
    treatmentName =="experiment2-slider-0.7" ~ 'slider-0.7'
  )) %>%
  separate(treatmentName, into = c('condition', 'treatment'), sep = '-') %>%
  group_by(gameID) %>%
  mutate(nRabbitsGame = sum(nRabbits),
         nSquirrelsGame = sum(nSquirrels), 
         nCritters = nRabbits + nSquirrels,
         mleEstimateIndiv = (nRabbits / (nRabbits + nSquirrels)), 
         mleEstimateIndiv = ifelse(is.na(mleEstimateIndiv), .5, mleEstimateIndiv),
         nCrittersGame = nRabbitsGame + nSquirrelsGame,
         mleEstimateGame = (nRabbitsGame / (nRabbitsGame + nSquirrelsGame))) %>%
  arrange(playerID, idx)
```

```{r}
d.guesses <- d.guesses.v1 %>%
  group_by(gameID) %>%
  mutate(
    totalCritters = sum(nCritters),
    prob = nCritters / totalCritters,
    entropy = -sum(ifelse(prob > 0, prob * log(prob), 0)),
    representation = mean(abs(mleEstimateIndiv - mleEstimateGame))
  ) %>%
  ungroup() %>%
  select(playerID, gameID, nCrittersGame, nCritters, treatment, prob, totalCritters,
         entropy, representation, condition)
```

```{r}
combined_heatmap <- bind_rows(
    d.random %>% mutate(dataset = "simulated"), 
    d.guesses %>% mutate(dataset = "empirical")
  ) %>%
  mutate(
    x_bin = cut(abs(entropy), breaks = seq(0, 1.5, .3), include.lowest = T, dig.lab = 2),
    y_bin = cut(abs(representation), breaks = seq(0, 1, .1), include.lowest = T, dig.lab = 2)
  ) %>%
  group_by(x_bin, y_bin, dataset) %>%
  summarise(count = n()) %>%
  group_by(dataset) %>%
  mutate(prop = count / sum(count))

ggplot(combined_heatmap, aes(x = x_bin, y = y_bin)) +
  geom_tile(aes(fill = prop), color = "white") +
  scale_fill_gradient(name = "Proportion of Games", low = "lightblue", high = "darkblue") +
  labs(
    x = "Entropy",
    y = "Representativeness"
  ) +
  theme_few() +
  theme(
    aspect.ratio = 1, axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels
  ) +
  facet_wrap(~dataset)
```

