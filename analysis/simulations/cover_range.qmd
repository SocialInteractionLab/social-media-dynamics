---
title: "experiment 2"
format: html
editor: visual
---

## Import packages

```{r}
library(dplyr)
library(stringr)
library(tidyr)
library(conflicted)  
conflict_prefer("filter", "dplyr")
conflict_prefer("lag", "dplyr")
library(tidyverse)
library(tidyboot)
library(lme4)
library(here)
library(jsonlite)
library(ggthemes)
library(lmerTest)

```

# Read in simulated data

```{r}
ParseJSONColumn <- function(x) {
  str_c("[", str_c(x, collapse = ", "), "]") %>%
    fromJSON(flatten = TRUE)
}


# Read the CSV file
d.range <- read_csv(here('analysis/simulations/cover_range.csv'), show_col_types = TRUE) 

d.range <- d.range %>% 
  mutate(gameID = seq_along(gameID))%>%
    mutate(players = map(players, .f = ParseJSONColumn)) %>% 
    unnest(players = players)

d.range <- d.range %>% 
  unnest(players)
```

```{r}

d.range <- d.range%>%
  mutate(
    mleEstimate2 = nRabbits / (nRabbits + nSquirrels),
    nCritters2 = nRabbits + nSquirrels
  ) %>%
  replace_na(list(mleEstimate2 = .5)) %>%
  group_by(gameID) %>%
  mutate(
    nRabbitsGame2 = sum(nRabbits),
    nSquirrelsGame2 = sum(nSquirrels),
    mleGame2 = nRabbitsGame2 / (nRabbitsGame2 + nSquirrelsGame2),
    totalCritters2 = sum(nCritters2),
    prob = nCritters2 / totalCritters2,
    entropy2 = -sum(ifelse(prob > 0, prob * log(prob), 0)),
    representation2 = mean(abs(mleEstimate2 - mleGame2))
  ) %>%
  ungroup()
```

```{r}
```

```{r}
graph_me <- d.range %>%
  mutate(
    x_bin = cut(abs(entropy2), breaks = seq(0, 1.5, .3), include.lowest = T, dig.lab = 2),
    y_bin = cut(abs(representation2), breaks = seq(0, 1, .1), include.lowest = T, dig.lab = 2)
  ) %>%
  group_by(x_bin, y_bin, gameID) %>%
  summarise(count = n()) %>%
  group_by(gameID) %>%
  mutate(prop = count / sum(count))

ggplot(graph_me, aes(x = x_bin, y = y_bin)) +
  geom_tile(aes(fill = prop), color = "white") +
  scale_fill_gradient(name = "Proportion of Games", low = "lightblue", high = "darkblue") +
  labs(
    x = "Entropy",
    y = "Representativeness"
  ) +
  theme_few() +
  theme(
    aspect.ratio = 1, axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels
  ) 
```

```{r}
graph_me2 <- d.range %>%
  mutate(
    x_bin = cut(abs(entropy), breaks = seq(0, 1.5, .3), include.lowest = T, dig.lab = 2),
    y_bin = cut(abs(representation), breaks = seq(0, 1, .1), include.lowest = T, dig.lab = 2)
  ) %>%
  group_by(x_bin, y_bin, gameID) %>%
  summarise(count = n()) %>%
  group_by(gameID) %>%
  mutate(prop2 = count / sum(count))

ggplot(graph_me, aes(x = x_bin, y = y_bin)) +
  geom_tile(aes(fill = prop), color = "white") +
  scale_fill_gradient(name = "Proportion of Games", low = "lightblue", high = "darkblue") +
  labs(
    x = "Entropy",
    y = "Representativeness"
  ) +
  theme_few() +
  theme(
    aspect.ratio = 1, axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels
  ) 
```

```{r}
nCritters_entropy_heatmap <- d.range %>%
  mutate(
    nCrittersGame_bin = cut(total_nCritters, breaks = seq(0, 100, by = 5), include.lowest = TRUE),
    entropy_bin = cut(entropy, breaks = seq(0, 1.5, .3), include.lowest = TRUE, dig.lab = 2)
  ) %>%
  group_by(nCrittersGame_bin, entropy_bin) %>%
  summarise(count = n()) %>%
  mutate(prop = count / sum(count))


# Heatmap for nCrittersGame vs. Entropy
ggplot(nCritters_entropy_heatmap, aes(x = entropy_bin, y = nCrittersGame_bin)) +
  geom_tile(aes(fill = prop), color = "white") +
  scale_fill_gradient(name = "Proportion of Games", low = "lightblue", high = "darkblue") +
  labs(x = "Entropy", y = "nCrittersGame") +
  theme_few() +
  theme(
    aspect.ratio = 1, axis.text.x = element_text(angle = 45, hjust = 1)
  )


```

```{r}
# Binned data for nCrittersGame vs. Representation
nCritters_rep_heatmap <- d.range %>%
  mutate(
    nCrittersGame_bin = cut(totalCritters2, breaks = seq(0, 100, by = 5), include.lowest = TRUE),
    representation_bin = cut(representation, breaks = seq(0, 1, .1), include.lowest = TRUE, dig.lab = 2)
  ) %>%
  group_by(nCrittersGame_bin, representation_bin) %>%
  summarise(count = n()) %>%
  mutate(prop = count / sum(count))

# Heatmap for nCrittersGame vs. Representation
ggplot(nCritters_rep_heatmap, aes(x = representation_bin, y = nCrittersGame_bin)) +
  geom_tile(aes(fill = prop), color = "white") +
  scale_fill_gradient(name = "Proportion of Games", low = "lightblue", high = "darkblue") +
  labs(x = "Representation", y = "nCrittersGame") +
  theme_few() +
  theme(
    aspect.ratio = 1, axis.text.x = element_text(angle = 45, hjust = 1)
  )

```
