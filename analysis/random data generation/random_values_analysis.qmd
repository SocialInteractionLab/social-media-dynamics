---
title: "experiment 2"
format: html
editor: visual
---

## Import packages

```{r}
library(conflicted)  
conflict_prefer("filter", "dplyr")
conflict_prefer("lag", "dplyr")

library(tidyverse)
library(tidyboot)
library(lme4)
library(here)
library(jsonlite)
library(ggthemes)

theme_set(theme_few())
```

## Read in data

```{r}
ParseJSONColumn <- function(x) {
  str_c("[ ", str_c(x, collapse = ",", sep=" "), " ]")  %>% 
    fromJSON(flatten = T) 
}

#d.guesses <- read_csv(here('analysis/random data generation/random_values.csv'))
#d.guesses <- read_csv(here('analysis/random data generation/random_values10k.csv'))
d.guesses <- read_csv(here('analysis/random data generation/game_results.csv'))
#d.guesses <- read_csv(here('analysis/random data generation/game_results10k.csv'))



```

## Create all other columns

```{r}
d.guesses <- d.guesses %>%
  mutate(
    mleEstimate = trunc(nRabbits / (nRabbits + nSquirrels)),
    # 3/(3+0) *100 =100
    #Nan -> 0
    #Nan -> 0
    #Nan -> 0
    nCritters = nRabbits + nSquirrels
    # 3+0+0+0+0+0
  ) %>%
  replace_na(list(mleEstimate = 0)) %>%
  group_by(gameID) %>%
  mutate(
    nRabbitsGame = sum(nRabbits),
    #3
    nSquirrelsGame = sum(nSquirrels),
    #0
    mleGame = trunc(nRabbitsGame / (nRabbitsGame + nSquirrelsGame)),
    #3/3 *100 =100
    totalCritters = sum(nCritters),
    #3
    prob = nCritters / totalCritters,
    # 3/3 = 1
    # 0/3 = 0
    entropy = -sum(ifelse(prob > 0, prob * log(prob), 0)),
    # log(3)
    # 0
    avgMlePlayers = mean(mleEstimate),
  
    representation = abs(avgMlePlayers - mleGame)
  ) %>%
  ungroup()



```

```{r}

# Plot the critter percentages grouped together
ggplot(d.guesses, aes(x = "", y = entropy)) +
  geom_jitter(width = 0.2, alpha = 0.6, color = "blue") +
  labs(title = "entropy Distribution Across All Players",
       x = "",
       y = "entropy") +
  theme_minimal()

```

fil

```{r}
heatmap_data <- d.guesses %>%
  group_by(
    x_bin = cut_interval(entropy, n = 5),
    y_bin = cut_interval(abs(representation), n = 5)
  )


# Create the heatmap

ggplot(heatmap_data, aes(x = x_bin, y = y_bin)) +
  geom_bin2d() +
  scale_fill_gradient(name = "Number of Games", low = "lightblue", high = "darkblue") +
  scale_alpha_continuous(name = "Avg Entropy", range = c(0.1, 1)) +
  labs(
    x = "Average Entropy",
    y = "Absolute Representation"
  ) 

```

```{r}

colnames(d.guesses)

heatmap_data <- d.guesses %>%
  group_by(
    x_bin = cut_interval(entropy, n = 5),
    y_bin = cut_interval(abs(totalCritters), n = 5)
  )


# Create the heatmap

ggplot(heatmap_data, aes(x = x_bin, y = y_bin)) +
  geom_bin2d() +
  scale_fill_gradient(name = "Number of Games", low = "lightblue", high = "darkblue") +
  scale_alpha_continuous(name = "Avg Entropy", range = c(0.1, 1)) +
  labs(
    x = "Average Entropy",
    y = "total Critters"
  ) 

```

```{r}
heatmap_data <- d.guesses %>%
  group_by(
    x_bin = cut_interval(abs(representation), n = 5),
    y_bin = cut_interval(abs(totalCritters), n = 5)
  )


# Create the heatmap

ggplot(heatmap_data, aes(x = x_bin, y = y_bin)) +
  geom_bin2d() +
  scale_fill_gradient(name = "Number of Games", low = "lightblue", high = "darkblue") +
  scale_alpha_continuous(name = "Avg Entropy", range = c(0.1, 1)) +
  labs(
    x = "Representation",
    y = "total Critters"
  ) 

```
