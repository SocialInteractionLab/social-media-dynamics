knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(ggthemes)
library(patchwork)
# Load data from all three models
slider_df <- read_csv('slider_degroot.csv') %>%
rename(trial = `...1`) %>%
pivot_longer(cols = starts_with("Agent"), names_to = "agent", values_to = "belief") %>%
mutate(model = "Slider DeGroot")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(ggthemes)
library(patchwork)
# Load data from all three models (relative to social-media-dynamics root)
slider_df <- read_csv('models/slider_degroot.csv') %>%
rename(trial = `...1`) %>%
pivot_longer(cols = starts_with("Agent"), names_to = "agent", values_to = "belief") %>%
mutate(model = "Slider DeGroot")
# Load data from all three models (relative to social-media-dynamics root)
slider_df <- read_csv(''/'slider_degroot.csv') %>%
rename(trial = `...1`) %>%
pivot_longer(cols = starts_with("Agent"), names_to = "agent", values_to = "belief") %>%
mutate(model = "Slider DeGroot")
# Load data from all three models (relative to social-media-dynamics root)
slider_df <- read_csv('slider_degroot.csv') %>%
rename(trial = `...1`) %>%
pivot_longer(cols = starts_with("Agent"), names_to = "agent", values_to = "belief") %>%
mutate(model = "Slider DeGroot")
# Load data from all three models (relative to social-media-dynamics root)
slider_df <- read_csv('/slider_degroot.csv') %>%
rename(trial = `...1`) %>%
pivot_longer(cols = starts_with("Agent"), names_to = "agent", values_to = "belief") %>%
mutate(model = "Slider DeGroot")
slider_df <- read_csv('slider_degroot.csv') %>%
rename(trial = `...1`) %>%
pivot_longer(cols = starts_with("Agent"), names_to = "agent", values_to = "belief") %>%
mutate(model = "Slider DeGroot")
get.wd()
getwd()
slider_df <- read_csv(here("slider_degroot.csv")) %>%
rename(trial = `...1`) %>%
pivot_longer(cols = starts_with("Agent"), names_to = "agent", values_to = "belief") %>%
mutate(model = "Slider DeGroot")
list.files()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(ggthemes)
library(patchwork)
slider_df <- read_csv(here("slider_degroot.csv")) %>%
rename(trial = `...1`) %>%
pivot_longer(cols = starts_with("Agent"), names_to = "agent", values_to = "belief") %>%
mutate(model = "Slider DeGroot")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(ggthemes)
library(patchwork)
library(here)
slider_df <- read_csv(here("slider_degroot.csv")) %>%
rename(trial = `...1`) %>%
pivot_longer(cols = starts_with("Agent"), names_to = "agent", values_to = "belief") %>%
mutate(model = "Slider DeGroot")
slider_df <- read_csv(here("models/slider_degroot.csv")) %>%
rename(trial = `...1`) %>%
pivot_longer(cols = starts_with("Agent"), names_to = "agent", values_to = "belief") %>%
mutate(model = "Slider DeGroot")
slider_df <- read_csv(here("models/slider_degroot.csv")) %>%
rename(trial = `...1`) %>%
pivot_longer(cols = starts_with("Agent"), names_to = "agent", values_to = "belief") %>%
mutate(model = "DeGroot")
slider_df <- read_csv(here("models/slider_degroot.csv")) %>%
pivot_longer(cols = starts_with("Agent"), names_to = "agent", values_to = "belief") %>%
mutate(model = "DeGroot")
count_df <- read_csv(here('models/count_version.csv')) %>%
pivot_longer(cols = starts_with("Agent"), names_to = "agent", values_to = "belief") %>%
mutate(model = "Count Version")
dyadic_df <- read_csv(here('models/dyadic_with_influence.csv')) %>%
pivot_longer(cols = starts_with("Agent"), names_to = "agent", values_to = "belief") %>%
mutate(model = "Dyadic")
# Combine all data
all_models <- bind_rows(slider_df, count_df, dyadic_df) %>%
mutate(model = factor(model, levels = c("Slider DeGroot", "Count Version", "Dyadic")))
# Individual model plots
p1 <- slider_df %>%
ggplot(aes(x = trial, y = belief, color = agent)) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE) +
scale_color_brewer(palette = 'Set2') +
labs(title = 'Slider DeGroot Model',
y = 'Belief (Proportion)',
x = 'Trial',
color = '') +
theme_few() +
theme(aspect.ratio = 0.8, legend.position = 'bottom')
p2 <- count_df %>%
ggplot(aes(x = trial, y = belief, color = agent)) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE) +
scale_color_brewer(palette = 'Set2') +
labs(title = 'Count Version Model',
y = 'Belief (Proportion)',
x = 'Trial',
color = '') +
theme_few() +
theme(aspect.ratio = 0.8, legend.position = 'bottom')
p3 <- dyadic_df %>%
ggplot(aes(x = trial, y = belief, color = agent)) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE) +
scale_color_brewer(palette = 'Set2') +
labs(title = 'Dyadic Model',
y = 'Belief',
x = 'Time Step',
color = '') +
theme_few() +
theme(aspect.ratio = 0.8, legend.position = 'bottom')
# Arrange plots
(p1 + p2) / p3
# Individual model plots
p1 <- slider_df %>%
ggplot(aes(x = trial, y = belief, color = agent)) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE) +
scale_color_brewer(palette = 'Set2') +
labs(title = 'Slider DeGroot Model',
y = 'Belief (Proportion)',
x = 'Trial',
color = '') +
theme_few() +
theme(aspect.ratio = 0.8, legend.position = 'bottom')
p2 <- count_df %>%
ggplot(aes(x = trial, y = belief, color = agent)) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE) +
scale_color_brewer(palette = 'Set2') +
labs(title = 'Count Version Model',
y = 'Belief (Proportion)',
x = 'Trial',
color = '') +
theme_few() +
theme(aspect.ratio = 0.8, legend.position = 'bottom')
p3 <- dyadic_df %>%
ggplot(aes(x = trial, y = belief, color = agent)) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE) +
scale_color_brewer(palette = 'Set2') +
labs(title = 'Dyadic Model',
y = 'Belief',
x = 'Time Step',
color = '') +
theme_few() +
theme(aspect.ratio = 0.8, legend.position = 'bottom')
# Individual model plots
p1 <- slider_df %>%
ggplot(aes(x = trial, y = belief, color = agent)) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE) +
scale_color_brewer(palette = 'Set2') +
labs(title = 'Slider DeGroot Model',
y = 'Belief (Proportion)',
x = 'Trial',
color = '') +
theme_few() +
theme(aspect.ratio = 0.8, legend.position = 'bottom')
p2 <- count_df %>%
ggplot(aes(x = trial, y = belief, color = agent)) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE) +
scale_color_brewer(palette = 'Set2') +
labs(title = 'Count Version Model',
y = 'Belief (Proportion)',
x = 'Trial',
color = '') +
theme_few() +
theme(aspect.ratio = 0.8, legend.position = 'bottom')
p3 <- dyadic_df %>%
ggplot(aes(x = trial, y = belief, color = agent)) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE) +
scale_color_brewer(palette = 'Set2') +
labs(title = 'Dyadic Model',
y = 'Belief',
x = 'Time Step',
color = '') +
theme_few() +
theme(aspect.ratio = 0.8, legend.position = 'bottom')
p1
# Individual model plots
p1 <- slider_df %>%
ggplot(aes(x = trial, y = belief, color = agent)) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE) +
scale_color_brewer(palette = 'Set2') +
labs(title = 'Slider DeGroot Model',
y = 'Belief (Proportion)',
x = 'Trial',
color = '') +
theme_few() +
theme(aspect.ratio = 0.8, legend.position = 'bottom')
p2 <- count_df %>%
ggplot(aes(x = trial, y = belief, color = agent)) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE) +
scale_color_brewer(palette = 'Set2') +
labs(title = 'Count Version Model',
y = 'Belief (Proportion)',
x = 'Trial',
color = '') +
theme_few() +
theme(aspect.ratio = 0.8, legend.position = 'bottom')
p3 <- dyadic_df %>%
ggplot(aes(x = trial, y = belief, color = agent)) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE) +
scale_color_brewer(palette = 'Set2') +
labs(title = 'Dyadic Model',
y = 'Belief',
x = 'Time Step',
color = '') +
theme_few() +
theme(aspect.ratio = 0.8, legend.position = 'bottom')
print(p1)
# Individual model plots
slider_df %>%
ggplot(aes(x = trial, y = belief, color = agent)) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE) +
scale_color_brewer(palette = 'Set2') +
labs(title = 'Slider DeGroot Model',
y = 'Belief (Proportion)',
x = 'Trial',
color = '') +
theme_few() +
theme(aspect.ratio = 0.8, legend.position = 'bottom')
View(slider_df)
# Individual model plots
slider_df %>%
ggplot(aes(x = Trial, y = belief, color = agent)) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE) +
scale_color_brewer(palette = 'Set2') +
labs(title = 'Slider DeGroot Model',
y = 'Belief (Proportion)',
x = 'Trial',
color = '') +
theme_few() +
theme(aspect.ratio = 0.8, legend.position = 'bottom')
count_df %>%
ggplot(aes(x = Trial, y = belief, color = agent)) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE) +
scale_color_brewer(palette = 'Set2') +
labs(title = 'Count Version Model',
y = 'Belief (Proportion)',
x = 'Trial',
color = '') +
theme_few() +
theme(aspect.ratio = 0.8, legend.position = 'bottom')
dyadic_df %>%
ggplot(aes(x = Trial, y = belief, color = agent)) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE) +
scale_color_brewer(palette = 'Set2') +
labs(title = 'Dyadic Model',
y = 'Belief',
x = 'Time Step',
color = '') +
theme_few() +
theme(aspect.ratio = 0.8, legend.position = 'bottom')
View(dyadic_df)
# Individual model plots
slider_df %>%
ggplot(aes(x = Trial, y = belief, color = agent)) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE) +
scale_color_brewer(palette = 'Set2') +
labs(title = 'Slider DeGroot Model',
y = 'Belief (Proportion)',
x = 'Trial',
color = '') +
theme_few() +
theme(aspect.ratio = 0.8, legend.position = 'bottom')
count_df %>%
ggplot(aes(x = Trial, y = belief, color = agent)) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE) +
scale_color_brewer(palette = 'Set2') +
labs(title = 'Count Version Model',
y = 'Belief (Proportion)',
x = 'Trial',
color = '') +
theme_few() +
theme(aspect.ratio = 0.8, legend.position = 'bottom')
dyadic_df %>%
ggplot(aes(x = `Time Step`, y = belief, color = agent)) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE) +
scale_color_brewer(palette = 'Set2') +
labs(title = 'Dyadic Model',
y = 'Belief',
x = 'Time Step',
color = '') +
theme_few() +
theme(aspect.ratio = 0.8, legend.position = 'bottom')
# Filter for normalized models only (exclude dyadic due to scale difference)
normalized_models <- all_models %>%
filter(model != "Dyadic")
# Comparison plot
normalized_models %>%
ggplot(aes(x = trial, y = belief, color = model)) +
geom_point(alpha = 0.7) +
geom_smooth(method = 'loess', se = FALSE, linewidth = 1.2) +
scale_color_brewer(palette = 'Accent') +
facet_wrap(~agent, ncol = 2) +
labs(title = 'Model Comparison: Slider DeGroot vs Count Version',
y = 'Belief (Proportion)',
x = 'Trial',
color = 'Model') +
theme_few() +
theme(aspect.ratio = 1,
legend.position = 'top',
strip.text = element_text(size = 12))
# Agent 1 trajectory across all models
all_models %>%
filter(agent == "Agent 1") %>%
ggplot(aes(x = trial, y = belief, color = model)) +
geom_point(size = 2) +
geom_smooth(method = 'loess', se = FALSE, linewidth = 1.5) +
scale_color_brewer(palette = 'Dark2') +
labs(title = 'Agent 1 Belief Trajectory Across Models',
y = 'Belief',
x = 'Trial/Time Step',
color = 'Model') +
theme_few() +
theme(aspect.ratio = 1,
legend.position = 'top')
# Agent 1 trajectory across all models
all_models %>%
filter(agent == "Agent 1") %>%
ggplot(aes(x = Trial, y = belief, color = model)) +
geom_point(size = 2) +
geom_smooth(method = 'loess', se = FALSE, linewidth = 1.5) +
scale_color_brewer(palette = 'Dark2') +
labs(title = 'Agent 1 Belief Trajectory Across Models',
y = 'Belief',
x = 'Trial/Time Step',
color = 'Model') +
theme_few() +
theme(aspect.ratio = 1,
legend.position = 'top')
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(ggthemes)
library(patchwork)
library(here)
slider_df <- read_csv(here("models/slider_degroot.csv")) %>%
pivot_longer(cols = starts_with("Agent"), names_to = "agent", values_to = "belief") %>%
mutate(model = "DeGroot")
count_df <- read_csv(here('models/count_version.csv')) %>%
pivot_longer(cols = starts_with("Agent"), names_to = "agent", values_to = "belief") %>%
mutate(model = "Count Version")
dyadic_df <- read_csv(here('models/dyadic_with_influence.csv')) %>%
pivot_longer(cols = starts_with("Agent"), names_to = "agent", values_to = "belief") %>%
mutate(model = "Dyadic")
# Combine all data
all_models <- bind_rows(slider_df, count_df, dyadic_df) %>%
mutate(model = factor(model, levels = c("Slider DeGroot", "Count Version", "Dyadic")))
# Individual model plots
slider_df %>%
ggplot(aes(x = Trial, y = belief, color = agent)) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE) +
scale_color_brewer(palette = 'Set2') +
labs(title = 'Slider DeGroot Model',
y = 'Belief (Proportion)',
x = 'Trial',
color = '') +
theme_few() +
theme(aspect.ratio = 0.8, legend.position = 'bottom')
count_df %>%
ggplot(aes(x = Trial, y = belief, color = agent)) +
geom_point() +
geom_smooth(method = 'loess', se = FALSE) +
scale_color_brewer(palette = 'Set2') +
labs(title = 'Count Version Model',
y = 'Belief (Proportion)',
x = 'Trial',
color = '') +
theme_few() +
theme(aspect.ratio = 0.8, legend.position = 'bottom')
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(ggthemes)
library(patchwork)
library(here)
library(reticulate)
reticulate::repl_python()
